{"version":3,"sources":["api/index.js","components/Home/Home.js","components/Room/Room.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Home","props","state","selectedRoom","roomList","name","redirect","change","bind","changeName","Math","floor","random","api","get","then","response","nameArray","data","map","room","setState","this","genRandomName","event","target","value","push","to","pathname","guestName","className","htmlFor","onChange","id","roomName","index","charAt","toUpperCase","slice","placeholder","type","onClick","Component","socket","io","Room","msgContainerRef","React","createRef","usersConnected","text","messages","msgText","sender","changeText","sendMessage","emit","roomname","match","params","user","on","msg","current","scrollTop","scrollHeight","msgsArray","txt","console","log","guestname","ref","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25266ee2.chunk.js","sourcesContent":["import axios from 'axios';\r\nexport const instance = axios.create({\r\n    baseURL: '/api/'\r\n})\r\n\r\n","import {Component} from 'react';\r\nimport {instance as api} from '../../api/index.js';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './Home.css'\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {selectedRoom:'main', roomList: [], name:'', redirect: null}\r\n        this.change = this.change.bind(this);\r\n        this.changeName = this.changeName.bind(this);\r\n        this.redirect = this.redirect.bind(this);\r\n    }\r\n\r\n    genRandomName() {\r\n        let randomNumber = Math.floor(Math.random() * (9999-1+1) + 1);\r\n        return \"Guest\" + randomNumber;\r\n    }\r\n    componentDidMount() {\r\n\r\n        api.get('/rooms')\r\n        .then( (response) => {\r\n            const nameArray = response.data.map((room) => {\r\n                return room.name;\r\n            })\r\n            this.setState({roomList: nameArray})\r\n\r\n        })\r\n        this.setState({name:this.genRandomName()})\r\n    }\r\n    change(event) {\r\n        this.setState({selectedRoom:event.target.value})\r\n    }\r\n    changeName(event) {\r\n\r\n        this.setState({name:event.target.value})\r\n    }\r\n    redirect() {\r\n        this.setState({redirect:`/room/${this.state.selectedRoom}`})\r\n    }\r\n    render() {\r\n        if(this.state.redirect) {\r\n            return <Redirect push to={{\r\n                pathname:this.state.redirect,\r\n                state: {guestName: this.state.name}\r\n            }} />\r\n        }\r\n        return(\r\n            <div className='container'>\r\n            <h1 className='app-name-h1'>The Hidden Chat</h1>\r\n            <label className='label-text' htmlFor='rooms'>Select Room:</label>\r\n            <br/>\r\n            <select className='select-room' onChange = {this.change} name='rooms' id='rooms'>\r\n                {this.state.roomList.map((roomName,index) => {\r\n                    return <option key = {index} className='room-option' value={roomName}>{roomName.charAt(0).toUpperCase() + roomName.slice(1)}</option>\r\n                })}\r\n            </select>\r\n            <br/>\r\n            <br/>\r\n            <input onChange={this.changeName} placeholder='Type your username' type='text' className='name-input'></input>\r\n            <br/>\r\n            <button onClick={this.redirect} className='connect-btn'>Connect</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, {Component} from 'react';\r\nimport './Room.css'\r\nimport { io } from 'socket.io-client';\r\nlet socket = io(':80');\r\n\r\nclass Room extends Component {\r\n    constructor() {\r\n        super();\r\n        this.msgContainerRef = React.createRef()\r\n        this.state = {guestName : 'cccc' , usersConnected:1  , text: '', messages: [{type:'other', msgText:`Welcome to the room.`, sender:'HiddenBot'}] };\r\n        this.changeText = this.changeText.bind(this);\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n\r\n\r\n    }\r\n    genRandomName() {\r\n        let randomNumber = Math.floor(Math.random() * (9999-1+1) + 1);\r\n        return \"Guest\" + randomNumber;\r\n    }\r\n    \r\n    componentDidMount() {\r\n\r\n          this.setState({guestName:this.genRandomName()} , () => {\r\n            socket.emit('join', {roomname: this.props.match.params.roomname, user:  this.state.guestName});\r\n            socket.on('message', (msg) => {\r\n                this.msgContainerRef.current.scrollTop = this.msgContainerRef.current.scrollHeight;\r\n                let msgsArray = this.state.messages\r\n                this.setState({messages: [...msgsArray, {type:'other', msgText: msg.txt, sender:msg.sender}] });\r\n                console.log(\"AAS\")\r\n                \r\n            }); \r\n        }); \r\n    }\r\n    \r\n\r\n    changeText(event) {\r\n        this.setState({text:event.target.value});\r\n    }\r\n\r\n    sendMessage() {\r\n        let msgsArray = this.state.messages\r\n        this.setState({messages: [...msgsArray, {type:'own', msgText: this.state.text, sender:this.state.guestname}] });\r\n        socket.emit('message', {roomname: this.props.match.params.roomname, user:  this.state.guestName, txt:this.state.text})\r\n    }\r\n    \r\n    render() {\r\n        \r\n        return(\r\n                <div className='chat-container'>\r\n                    <div className = 'room-name-container'>\r\n                        {this.props.match.params.roomname}\r\n                    </div>\r\n                    <div className = 'messages-container' ref={this.msgContainerRef}>\r\n                        {this.state.messages.map((msg,index) => {\r\n                            console.log(msg)\r\n                            if(msg.type === 'own') {\r\n                                return(\r\n                                   <div key = {index} className='message-own'>\r\n                                    You: {msg.msgText}\r\n                                   </div> \r\n                                )\r\n                            } else {\r\n                                return(\r\n                                    <div key = {index} className='message-other'>\r\n                                        {msg.sender} : {msg.msgText}\r\n                                   </div> \r\n                                )\r\n                            }\r\n                                \r\n                        })\r\n                        }\r\n                        \r\n                        \r\n                    </div>\r\n                    <div className = 'sidebar-container'>\r\n                    </div>\r\n                    <div className='type-container'>\r\n                        <textarea onChange = {this.changeText}/>\r\n\r\n                        <button onClick = {this.sendMessage} className = 'send-message-btn'>Send</button>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Room;","import {Switch, Route, BrowserRouter as Router} from 'react-router-dom';\nimport Home from './components/Home/Home'\nimport Room from './components/Room/Room'\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/'><Home /></Route>\n        <Route path ='/room/:roomname' component = {Room}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}